#include<iostream>
#include<cmath>
using namespace std;

int _11[7000][2],_21[7000][2];
int i11,i21;
int W11,W21,L11,L21;

int main(){
    char c;
    
    while((cin>>c,c)!='E'){
        //注意，若一方达到11时，分差未达到2时，则要继续“加时”直到分差大于2
        if((W11>=11||L11>=11)&&abs(W11-L11)>=2){
            _11[i11][0]=W11,_11[i11][1]=L11;
            i11++;
            W11=L11=0;
        }
        if((W21>=21||L21>=21)&&abs(W21-L21)>=2){
            _21[i21][0]=W21,_21[i21][1]=L21;
            i21++;
            W21=L21=0;
        }
        if(c=='W') W11++,W21++;
        else if(c=='L') L11++,L21++;
    }
    _11[i11][0]=W11,_11[i11][1]=L11;
    _21[i21][0]=W21,_21[i21][1]=L21;
    
    for(int i=0;i<=i11;i++){
        cout << _11[i][0] << ':' << _11[i][1] << endl;
    }
    //本题还有个表述不清的坑：若当前是新的一局的刚开始，那么0:0也要输出
    if((W11>=11||L11>=11)&&abs(W11-L11)>=2)
        cout<< "0:0" <<endl;
    cout<<endl;
    for(int i=0;i<=i21;i++){
        cout << _21[i][0] << ':' << _21[i][1] << endl;
    }
    if((W21>=21||L21>=21)&&abs(W21-L21)>=2)
        cout<< "0:0" <<endl;
    
    return 0;
}